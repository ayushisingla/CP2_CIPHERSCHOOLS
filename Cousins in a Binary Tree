/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
      TreeNode root1,root2;
    int depth1 = -1,depth2 = -1;
    public boolean isCousins(TreeNode root, int x, int y) {
        if(root==null || root.left==null && root.right==null) return false;
        helper(root,null, x, y,0);
        if(root1==null || root2==null ) return false;
         
        return (root1!=root2 && depth1==depth2);
        
    }
    
    public void helper(TreeNode root,TreeNode parent, int x, int y,int depth)
    {
        if(root==null) return;
        if(root.val==x)
        {
            root1=parent;
            depth1=depth;
        }
        if(root.val==y)
        {
            root2=parent;
            depth2=depth;
        }
        helper(root.left,root,x,y,depth+1);
        helper(root.right,root,x,y,depth+1);
    }
}